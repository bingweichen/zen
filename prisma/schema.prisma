// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String?  @unique // 新增邮箱字段，允许为 null
  password  String
  source    String   @default("google") // 用户来源，如 'google'、'email' 等
  currentCompanyId Int? // 当前选择的公司ID
  createdAt DateTime @default(now())
  ownedCompanies Company[] @relation("CompanyOwner")
  employees Employee[]
  currentCompany Company? @relation("CurrentCompany", fields: [currentCompanyId], references: [id])
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  description String? // 公司描述
  address   String? // 公司地址
  phone     String? // 联系电话
  email     String? // 联系邮箱
  website   String? // 公司网站
  taxNumber String? // 税号
  businessLicense String? // 营业执照号
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ownerId   Int
  owner     User     @relation("CompanyOwner", fields: [ownerId], references: [id])
  employees Employee[]
  roles     Role[]
  currentUsers User[] @relation("CurrentCompany")
}

model Employee {
  id        Int      @id @default(autoincrement())
  userId    Int
  companyId Int
  roleId    Int
  user      User     @relation(fields: [userId], references: [id])
  company   Company  @relation(fields: [companyId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])
}

model Role {
  id          Int          @id @default(autoincrement())
  companyId   Int
  name        String
  description String?
  company     Company      @relation(fields: [companyId], references: [id])
  employees   Employee[]
  permissions RolePermission[]
}

model Permission {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  roles       RolePermission[]
}

model RolePermission {
  id           Int         @id @default(autoincrement())
  roleId       Int
  permissionId Int
  role         Role        @relation(fields: [roleId], references: [id])
  permission   Permission  @relation(fields: [permissionId], references: [id])
}

model EmailVerificationCode {
  id         Int      @id @default(autoincrement())
  email      String
  code       String
  expiresAt  DateTime
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())
}
